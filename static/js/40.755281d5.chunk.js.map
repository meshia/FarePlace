{"version":3,"file":"static/js/40.755281d5.chunk.js","mappings":"6NAoCA,EAlCc,SAAC,GAAe,IAAdA,EAAa,EAAbA,QACZ,EAAsBC,EAAAA,SAAe,GAArC,eAAOC,EAAP,KAAYC,EAAZ,KACA,EAA0BF,EAAAA,SAAe,GAAzC,eAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,EAAAA,SAAe,GAA7C,eAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,EAAAA,SAAe,GAA7C,eAAOO,EAAP,KAAgBC,EAAhB,KAEIC,EAAuBC,aAAY,WAEnC,IAAMC,GAAM,IAAIC,MAAOC,UACnBC,EAAgB,IAAIF,KAAKb,GAC7Be,EAAcV,SAAS,IACvBU,EAAcR,WAAW,GACzBQ,EAAcN,WAAW,GAEzB,IAAMO,GADND,EAAgBA,EAAcD,WACGF,EACjCT,EAAOc,KAAKC,MAAMF,EAAQ,QAC1BX,EAASY,KAAKC,MAAOF,EAAQ,MAAT,OACpBT,EAAWU,KAAKC,MAAOF,EAAQ,KAAT,MACtBP,EAAWQ,KAAKC,MAAOF,EAAQ,IAAkB,MAE7CA,EAAW,GACXG,cAAcT,KAEnB,KACH,OACI,iBAAKU,UAAU,QAAf,WACI,iBAAMA,UAAU,MAAhB,SAAwBlB,KACxB,iBAAMkB,UAAU,QAAhB,SAA0BhB,KAC1B,iBAAMgB,UAAU,UAAhB,SAA4Bd,KAC5B,iBAAMc,UAAU,UAAhB,SAA4BZ,QCLxC,EAxBa,SAAC,GAAY,IAAXa,EAAU,EAAVA,KACLC,EAAaD,EAAKC,WAAaD,EAAKC,WAAa,GACjDC,EAAYF,EAAKE,UAAYF,EAAKE,UAAY,GAC9CC,EAAK,UAAMF,EAAN,cAAsBC,GAE/B,OACE,iBAAKH,UAAU,OAAf,UACMC,EAAKrB,UAAW,SAAC,EAAD,CAAOA,QAASqB,EAAKrB,UACrCqB,EAAKI,WACH,gBAAKL,UAAU,gBAAf,UACI,gBAAKM,IAAML,EAAKI,SAAWE,IAAMH,OAGzC,wBAAMA,IACJH,EAAKO,kBACH,kBAAMR,UAAU,wBAAhB,iCAAuDC,EAAKO,iBAA5D,OAA8EP,EAAKQ,gBAAnF,OAEFR,EAAKS,eACH,kBAAMV,UAAU,wBAAhB,iCAAuDC,EAAKS,cAA5D,WCjBVC,EAAQC,EAAQ,KA6BtB,EA3BuB,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBE,OAhBFC,EAAAA,EAAAA,YAAU,WACN,IACMC,EAAS,mCAAG,8EACdN,EACKO,IAHG,0BAIHC,MAAK,SAAUC,GACZL,EAASK,EAASnB,SAErBoB,OAAM,SAAUC,GACbC,QAAQC,IAAIF,MAPN,2CAAH,qDAWfL,MACC,KAGD,gBAAKjB,UAAU,iBAAf,SACKc,EAAMW,KAAI,SAAAC,GAAI,OACX,SAAC,EAAD,CAAoBzB,KAAMyB,GAAfA,EAAKC","sources":["components/Timer.js","components/Card.js","components/CardsContainer.js"],"sourcesContent":["import React from 'react';\n\nconst Timer = ({endDate}) => {\n    const [day, setDay] = React.useState(0);\n    const [hours, setHours] = React.useState(0);\n    const [minutes, setMinutes] = React.useState(0);\n    const [seconds, setSeconds] = React.useState(0);\n\n    var timeIntervalInstance = setInterval(function() {\n        // i know the timer is over already, it's an idea for timer display\n        const now = new Date().getTime();\n        let countDownDate = new Date(endDate);\n        countDownDate.setHours(20);\n        countDownDate.setMinutes(0);\n        countDownDate.setSeconds(0);\n        countDownDate = countDownDate.getTime();\n        const distance = countDownDate - now;\n        setDay(Math.floor(distance / (1000 * 60 * 60 * 24)));\n        setHours(Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        setMinutes(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)));\n        setSeconds(Math.floor((distance % (1000 * 60)) / 1000));\n\n        if (distance < 0) {\n            clearInterval(timeIntervalInstance);\n        }\n    }, 1000);\n    return (\n        <div className=\"Timer\">\n            <span className=\"day\">{ day }</span>\n            <span className=\"hours\">{ hours }</span>\n            <span className=\"minutes\">{ minutes }</span>\n            <span className=\"seconds\">{ seconds }</span>\n        </div>\n      );\n}\n\nexport default Timer;","import Timer from './Timer';\n\nconst Card = ({data}) => {\n    const outboundId = data.outboundId ? data.outboundId : \"\";\n    const inboundId = data.inboundId ? data.inboundId : \"\";\n    const route = `${outboundId} - ${inboundId}`;\n\n      return (\n        <div className=\"Card\">\n            { data.endDate && <Timer endDate={data.endDate}></Timer> }\n            { data.imageUrl &&\n                <div className=\"image-wrapper\">\n                    <img src={ data.imageUrl } alt={ route }/>\n                </div>\n            }\n            <h2>{ route }</h2>\n            { data.currentMinPrice &&\n                <span className=\"current-price-wrapper\"> { `Now From ${data.currentMinPrice}${data.currencySymbol}` } </span>\n            }\n            { data.viewersCount &&\n                <span className=\"viewers-count-wrapper\"> { `Viewers: ${data.viewersCount}` } </span>\n            }\n        </div>\n      );\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Card from './Card';\n\nconst axios = require('axios');\n\nconst CardsContainer = () => {\n    const [items, setItems] = useState([]);\n    useEffect(() => {\n        const url = \"/promotional/test.json\";\n        const fetchData = async () => {\n            axios\n                .get(url)\n                .then(function (response) {\n                    setItems(response.data);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        };\n    \n        fetchData();\n      }, [])\n\n      return (\n        <div className=\"CardsContainer\">\n            {items.map(item => (\n                <Card key={item.id} data={item}/>\n            ))}\n        </div>\n      );\n}\n\nexport default CardsContainer;"],"names":["endDate","React","day","setDay","hours","setHours","minutes","setMinutes","seconds","setSeconds","timeIntervalInstance","setInterval","now","Date","getTime","countDownDate","distance","Math","floor","clearInterval","className","data","outboundId","inboundId","route","imageUrl","src","alt","currentMinPrice","currencySymbol","viewersCount","axios","require","useState","items","setItems","useEffect","fetchData","get","then","response","catch","error","console","log","map","item","id"],"sourceRoot":""}